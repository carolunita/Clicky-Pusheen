{"ast":null,"code":"import _classCallCheck from \"/Users/carolina/Desktop/clicky-pusheen/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carolina/Desktop/clicky-pusheen/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carolina/Desktop/clicky-pusheen/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carolina/Desktop/clicky-pusheen/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carolina/Desktop/clicky-pusheen/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/carolina/Desktop/clicky-pusheen/src/components/Default/Default.js\";\nimport React, { Component } from \"react\";\nimport Card from \"../Card\";\nimport Header from \"../Header\";\nimport pusheens from \"../../pusheens.json\";\nimport \"./Default.css\";\n\nvar Default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Default, _Component);\n\n  function Default() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Default);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Default)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      pusheens: pusheens,\n      clicked: [],\n      score: 0,\n      topscore: 0,\n      message: \"Click on a Pusheen to begin the Game!\"\n    };\n\n    _this.handleOnClick = function (event) {\n      // Gets id of clicked Pusheen\n      var id = event.target.id; // Flag for game logic\n\n      var flag = false; // Checking if the Pusheen has been clicked before\n\n      for (var i = 0; i < _this.state.clicked.length; i++) {\n        if (id === _this.state.clicked[i]) {\n          flag = true;\n        }\n      } // Game logic\n\n\n      if (flag === true) {\n        // If the Pusheen has already been clicked, reset score\n        _this.setState({\n          clicked: [],\n          score: 0,\n          message: \"You have already clicked this Pusheen... Game Over!\"\n        });\n      } else {\n        // If the Pusheen has not been clicked yet, add it to the array of clicked Pusheens\n        _this.state.clicked.push(id); // Updates the top score if the current score exceeds archived top score\n\n\n        if (_this.state.score + 1 > _this.state.topscore) {\n          _this.setState({\n            topscore: _this.state.score + 1\n          });\n        }\n\n        if (_this.state.score === 11) {\n          // Resets Game\n          _this.setState({\n            clicked: [],\n            score: 12,\n            topscore: 12,\n            message: \"Congratulations! You clicked all of the Pusheens!\"\n          });\n        } else {\n          // Updates score and message\n          _this.setState({\n            score: _this.state.score + 1,\n            message: \"Ooh, you have clicked a new Pusheen!\"\n          });\n        } // Shuffles the array of Pusheens\n\n\n        _this.shuffleArray(_this.state.pusheens);\n      }\n    };\n\n    _this.shuffleArray = function (a) {\n      for (var i = a.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var _ref = [a[j], a[i]];\n        a[i] = _ref[0];\n        a[j] = _ref[1];\n      }\n\n      _this.setState({\n        pusheens: a\n      });\n    };\n\n    _this.componentDidMount = function () {\n      console.log(\"Assembling the Pusheens!\");\n\n      _this.shuffleArray(_this.state.pusheens);\n    };\n\n    return _this;\n  }\n\n  _createClass(Default, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12 col-sm-12 col-md-12 col-lg-5 col-xl-5 ml-auto mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Header, {\n        message: this.state.message,\n        score: this.state.score,\n        topscore: this.state.topscore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-12 col-sm-12 col-md-12 col-lg-7 col-xl-7 ml-auto mr-auto kennel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.state.pusheens.map(function (pusheen) {\n        return React.createElement(Card, {\n          id: pusheen.id,\n          key: pusheen.id,\n          name: pusheen.name,\n          image: pusheen.image,\n          handleOnClick: _this2.handleOnClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return Default;\n}(Component);\n\nexport default Default;","map":{"version":3,"sources":["/Users/carolina/Desktop/clicky-pusheen/src/components/Default/Default.js"],"names":["React","Component","Card","Header","pusheens","Default","state","clicked","score","topscore","message","handleOnClick","event","id","target","flag","i","length","setState","push","shuffleArray","a","j","Math","floor","random","componentDidMount","console","log","map","pusheen","name","image"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,eAAP;;IAEMC,O;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJF,MAAAA,QAAQ,EAAEA,QADN;AAEJG,MAAAA,OAAO,EAAE,EAFL;AAGJC,MAAAA,KAAK,EAAE,CAHH;AAIJC,MAAAA,QAAQ,EAAE,CAJN;AAKJC,MAAAA,OAAO,EAAE;AALL,K;;UASRC,a,GAAgB,UAAAC,KAAK,EAAI;AACrB;AACA,UAAIC,EAAE,GAAGD,KAAK,CAACE,MAAN,CAAaD,EAAtB,CAFqB,CAIrB;;AACA,UAAIE,IAAI,GAAG,KAAX,CALqB,CAOrB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAKV,KAAL,CAAWC,OAAX,CAAmBU,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAChD,YAAIH,EAAE,KAAK,MAAKP,KAAL,CAAWC,OAAX,CAAmBS,CAAnB,CAAX,EAAkC;AAC9BD,UAAAA,IAAI,GAAG,IAAP;AACH;AACJ,OAZoB,CAcrB;;;AACA,UAAIA,IAAI,KAAK,IAAb,EAAmB;AACf;AACA,cAAKG,QAAL,CAAc;AACVX,UAAAA,OAAO,EAAE,EADC;AAEVC,UAAAA,KAAK,EAAE,CAFG;AAGVE,UAAAA,OAAO,EAAE;AAHC,SAAd;AAKH,OAPD,MAOO;AACH;AACA,cAAKJ,KAAL,CAAWC,OAAX,CAAmBY,IAAnB,CAAwBN,EAAxB,EAFG,CAIH;;;AACA,YAAI,MAAKP,KAAL,CAAWE,KAAX,GAAmB,CAAnB,GAAuB,MAAKF,KAAL,CAAWG,QAAtC,EAAgD;AAC5C,gBAAKS,QAAL,CAAc;AAACT,YAAAA,QAAQ,EAAE,MAAKH,KAAL,CAAWE,KAAX,GAAmB;AAA9B,WAAd;AACH;;AAED,YAAI,MAAKF,KAAL,CAAWE,KAAX,KAAqB,EAAzB,EAA6B;AACzB;AACA,gBAAKU,QAAL,CAAc;AACVX,YAAAA,OAAO,EAAE,EADC;AAEVC,YAAAA,KAAK,EAAE,EAFG;AAGVC,YAAAA,QAAQ,EAAE,EAHA;AAIVC,YAAAA,OAAO,EAAE;AAJC,WAAd;AAMH,SARD,MAQO;AACH;AACA,gBAAKQ,QAAL,CAAc;AACVV,YAAAA,KAAK,EAAE,MAAKF,KAAL,CAAWE,KAAX,GAAmB,CADhB;AAEVE,YAAAA,OAAO,EAAE;AAFC,WAAd;AAIH,SAvBE,CAyBH;;;AACA,cAAKU,YAAL,CAAkB,MAAKd,KAAL,CAAWF,QAA7B;AACH;AACJ,K;;UAGDgB,Y,GAAe,UAACC,CAAD,EAAO;AAClB,WAAK,IAAIL,CAAC,GAAGK,CAAC,CAACJ,MAAF,GAAW,CAAxB,EAA2BD,CAAC,GAAG,CAA/B,EAAkCA,CAAC,EAAnC,EAAuC;AACnC,YAAMM,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBT,CAAC,GAAG,CAArB,CAAX,CAAV;AADmC,mBAEpB,CAACK,CAAC,CAACC,CAAD,CAAF,EAAOD,CAAC,CAACL,CAAD,CAAR,CAFoB;AAElCK,QAAAA,CAAC,CAACL,CAAD,CAFiC;AAE5BK,QAAAA,CAAC,CAACC,CAAD,CAF2B;AAGtC;;AAED,YAAKJ,QAAL,CAAc;AAACd,QAAAA,QAAQ,EAAEiB;AAAX,OAAd;AACH,K;;UAGDK,iB,GAAoB,YAAM;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AACA,YAAKR,YAAL,CAAkB,MAAKd,KAAL,CAAWF,QAA7B;AACH,K;;;;;;;6BAEQ;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,8DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAE,KAAKE,KAAL,CAAWI,OADxB;AAEI,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,KAFtB;AAGI,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EASI;AAAK,QAAA,SAAS,EAAC,qEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKH,KAAL,CAAWF,QAAX,CAAoByB,GAApB,CAAwB,UAAAC,OAAO;AAAA,eAC5B,oBAAC,IAAD;AACI,UAAA,EAAE,EAAEA,OAAO,CAACjB,EADhB;AAEI,UAAA,GAAG,EAAEiB,OAAO,CAACjB,EAFjB;AAGI,UAAA,IAAI,EAAEiB,OAAO,CAACC,IAHlB;AAII,UAAA,KAAK,EAAED,OAAO,CAACE,KAJnB;AAKI,UAAA,aAAa,EAAE,MAAI,CAACrB,aALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD4B;AAAA,OAA/B,CADL,CATJ,CADJ,CADJ;AAyBH;;;;EAzGiBV,S;;AA4GtB,eAAeI,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"../Card\";\nimport Header from \"../Header\";\nimport pusheens from \"../../pusheens.json\";\nimport \"./Default.css\";\n\nclass Default extends Component {\n    // Sets the state variables\n    state = {\n        pusheens: pusheens,\n        clicked: [],\n        score: 0,\n        topscore: 0,\n        message: \"Click on a Pusheen to begin the Game!\"\n    };\n\n    // Initiates game logic upon clicking a Pusheen\n    handleOnClick = event => {\n        // Gets id of clicked Pusheen\n        let id = event.target.id;\n\n        // Flag for game logic\n        let flag = false;\n\n        // Checking if the Pusheen has been clicked before\n        for (let i = 0; i < this.state.clicked.length; i++) {\n            if (id === this.state.clicked[i]) {\n                flag = true;\n            }\n        }\n\n        // Game logic\n        if (flag === true) {\n            // If the Pusheen has already been clicked, reset score\n            this.setState({\n                clicked: [], \n                score: 0, \n                message: \"You have already clicked this Pusheen... Game Over!\"\n            });\n        } else {\n            // If the Pusheen has not been clicked yet, add it to the array of clicked Pusheens\n            this.state.clicked.push(id);\n\n            // Updates the top score if the current score exceeds archived top score\n            if (this.state.score + 1 > this.state.topscore) {\n                this.setState({topscore: this.state.score + 1});\n            }\n\n            if (this.state.score === 11) {\n                // Resets Game\n                this.setState({\n                    clicked: [],\n                    score: 12, \n                    topscore: 12,\n                    message: \"Congratulations! You clicked all of the Pusheens!\"\n                });\n            } else {\n                // Updates score and message\n                this.setState({\n                    score: this.state.score + 1, \n                    message: \"Ooh, you have clicked a new Pusheen!\"\n                });\n            }\n\n            // Shuffles the array of Pusheens\n            this.shuffleArray(this.state.pusheens);\n        }\n    };\n\n    // Shuffles the array of Pusheens\n    shuffleArray = (a) => {\n        for (let i = a.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [a[i], a[j]] = [a[j], a[i]];\n        }\n\n        this.setState({pusheens: a});\n    };\n\n    // Shuffles the array of Pusheens once component has mounted\n    componentDidMount = () => {\n        console.log(\"Assembling the Pusheens!\");\n        this.shuffleArray(this.state.pusheens);\n    };\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-5 col-xl-5 ml-auto mr-auto\">\n                        <Header \n                            message={this.state.message}\n                            score={this.state.score}\n                            topscore={this.state.topscore}\n                        />\n                    </div>\n                \n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-7 col-xl-7 ml-auto mr-auto kennel\">\n                        {this.state.pusheens.map(pusheen => (\n                            <Card\n                                id={pusheen.id}\n                                key={pusheen.id}\n                                name={pusheen.name}\n                                image={pusheen.image}\n                                handleOnClick={this.handleOnClick}\n                            />\n                        ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Default;"]},"metadata":{},"sourceType":"module"}